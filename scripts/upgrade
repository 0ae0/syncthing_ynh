#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
ynh_print_info "Loading installation settings..."

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get $app domain)
path_url=$(ynh_app_setting_get $app path)

final_path=$(ynh_app_setting_get $app final_path)

sync_home=$(ynh_app_setting_get $app sync_home)
sync_port=$(ynh_app_setting_get $app sync_port)
gui_port=$(ynh_app_setting_get $app gui_port)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_print_info "Backing up the app before upgrading (may take a while)..."

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	ynh_clean_check_starting
	# restore it if the upgrade fails
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_print_info "Upgrading source files..."

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source "$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_print_info "Upgrading nginx web server configuration..."

# Create a dedicated nginx config
ynh_add_nginx_config "gui_port"

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_print_info "Making sure dedicated system user exists..."

# Create a dedicated user (if not existing)
ynh_system_user_create --username=$app --home_dir=$final_path

#=================================================
# SPECIFIC UPGRADE
#=================================================
# CREATE SYNC DIRECTORY
#=================================================
ynh_print_info "Creating sync directory..."

# Make directories and set rights
mkdir -p "$sync_home"
chown -R "$app": "$sync_home"

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================

config_file="$final_path/.config/syncthing/config.xml"

ynh_backup_if_checksum_is_different "$config_file"
# Recalculate and store the checksum of the file for the next upgrade.
ynh_store_file_checksum "$config_file"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_print_info "Upgrading systemd configuration..."

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions on app files
chown -R $app: $final_path

#=================================================
# SETUP SSOWAT
#=================================================
ynh_print_info "Upgrading SSOwat configuration..."

ynh_app_setting_set $app unprotected_uris "/"

#=================================================
# RELOAD NGINX
#=================================================
ynh_print_info "Reloading nginx web server..."

systemctl reload nginx

#=================================================
# END OF SCRIPT
#=================================================

ynh_print_info "Upgrade of $app completed"
